---
title: "SSH_presentation"
format: revealjs
editor: visual
---

```{r echo=FALSE}
library(tidyverse)
library(lubridate)
library(tidytuesdayR)
library(GGally)

```

```{r include=FALSE}
# Download all data files
tuesdata <- tidytuesdayR::tt_load('2020-01-21')
source("0-dataMunging.R")

# Individual dataframe
spotify_songs <- tuesdata$spotify_songs
```

## New slide

use /heading 2 to create a new slide

# Introduction

## Background

-   The data was squired through Spotify API in 2020 by TidyTuesday

-   The class of the data frame

```{r include=TRUE}
class(spotify_songs)
```

-   The number of rows

    ```{r}
    nrow(spotify_songs)

    ```

## The data set

-   The variables (columns)

```{r}
names(spotify_songs)
```

## The different Genres

-   The main genres in the data

    ```{r}
    table(spotify_songs$playlist_genre)
    ```

## Cleaning: NA values

-   Check for the NA observation

    ```{r}
    songs_na <-
    spotify_songs[rowSums(is.na(spotify_songs)) > 0, ]
    songs_na %>% 
      select(track_name, track_artist,track_album_name, track_id)
    ```

-   After investigating, these are unique songs

## Cleaning: Duplicates

-   Songs that have the same name

    ```{r}
    sum(duplicated(spotify_songs$track_name))
    ```

-   Songs that have the same ID

    ```{r}
    sum(duplicated(spotify_songs$track_id))
    ```

# EDA

# Hypothesis testing

# 
